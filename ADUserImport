#Initialises module paramaters and automatically loads when module is called.
#New-ModuleManifest -Path $env:ProgramFiles\WindowsPowerShell\Modules\ADUserImport\ADUserImport.psm1 -RootModule ADUserImport -Author 'Owen Graham' -Description 'PowerShell Project 1 - Import new users to Active Directory using CSV file' -CompanyName 'MSSA-AU SCA1'

<# $Module = New-Module -Name 'ADUserImport' -ScriptBlock {
    Function Import-NewHires {$userInfo = Import-Csv E:\NewHires.csv}
} | Import-Module #>

Function Import-NewUsers {

    [cmdletBinding()]
    Param ($CSVPath = 'E:\NewHires.csv')
    $Users = Import-Csv -Path $CSVPath
    $Departments = $Users.department | Select-Object -Unique
    $CheckOUNames = (Get-ADOrganizationalUnit -Filter *)
    $CheckGroupNames = (Get-ADGroup -Filter *)
    foreach ($Department in $Departments) {
        if ($Department -notin $CheckOUNames) {
            New-ADOrganizationalUnit -Name $Department -Path 'dc=adatum,dc=com'
        }
        if ($Department -notin $CheckGroupNames) {
            New-ADGroup -GroupScope Global -Name $Department -Path "ou=$Department,dc=adatum,dc=com"
        }
    }
    
    
    $UserCount = $Users.count

    foreach ($User in $Users) {
    $Username = $User.firstname + ' ' + $User.lastname

    $ADUser = Get-ADUser -Filter *

        #Implement splatting for the parameters to be used in New-ADUser.
        $userParameters = @{
            GivenName = $User.firstName
            Surname = $User.lastName
            UserPrincipalName = $User.upn
            SamAccountName = $SamAccountName
            Department = $User.Department
            StreetAddress = $User.streetaddress
            City = $User.city
            MobilePhone = $User.mobilephone
            AccountPassword = $User.password
            Office = $User.officename
        }
        New-ADUser @userParameters
        $NewUser = Get-ADUser -Identity $SamAccountName
        Add-ADGroupMember -Identity $User.department -Members $NewUser
    }
}
